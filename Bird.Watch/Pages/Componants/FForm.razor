<MudForm Model="@model" @ref="@form">
    <MudCard Style="height : 71vh;">
        <MudCardContent>
            <MudGrid Spacing="3">
                <MudItem xs="6">
                    <MudCardContent>

                            <MudTextField @bind-Value="model.departure"
                                        Immediate="true"
                                        Label="Departure" />

                            <MudTextField @bind-Value="model.arrival"
                                        Immediate="true"
                                        Label="Arrival" />

                            <MudTextField @bind-Value="model.airline"
                                            Immediate="true"
                                            Label="Airline" />
                            <MudSelect T="String"  Label="Status" AnchorOrigin="Origin.BottomCenter">
                                @foreach(var item in Enum.GetNames(typeof(FlightStatus))){
                                    <MudSelectItem Value="@item" Label="@item" />
                                }
                            </MudSelect>
                    </MudCardContent>
                </MudItem>
                <MudItem xs="6">
                    <MudTextField @bind-Value="model.flight"
                                Immediate="true"
                                Label="Flight Nr" />

                    <MudDatePicker Label="Departure Date" Editable="true" @bind-Date="model.flight_date_start" Placeholder="Select Date" />
                    <MudDatePicker Label="Arrival Date" Editable="true" @bind-Date="model.flight_date_end" Placeholder="Select Date" />
                    <MudCardActions>
                        <MudButton Variant="Variant.Filled" Color="Color.Secondary" FullWidth="true" Class="ml-auto" OnClick="@(async () => await Refresh())">Refresh</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" FullWidth="true" OnClick="@(async () => await Submit())">Search</MudButton>
                        <MudButton Variant="Variant.Filled" Color="Color.Error" FullWidth="true" Class="ml-auto" OnClick="@(async () => await Cancel())">Cancel</MudButton>
                    </MudCardActions>
                </MudItem>
            </MudGrid>
        </MudCardContent>
    </MudCard>
</MudForm>

@code {
    MudForm form;

    [Parameter] public FilterQuery model {get; set;} = new FilterQuery();
    [Parameter] public EventCallback<FilterQuery> OnSubmit { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private async Task Submit()
    {
        await OnSubmit.InvokeAsync(model);
    }

    private async Task Cancel()
    {
        model = new FilterQuery();
        await OnCancel.InvokeAsync();
    }

    private async Task Refresh()
    {
        await OnCancel.InvokeAsync();
    }
}